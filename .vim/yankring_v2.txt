,V
set nocompatiblesource $VIMRUNTIME/vimrc_example.vimsource $VIMRUNTIME/mswin.vimbehave mswin,V
set nocompatiblesource $VIMRUNTIME/vimrc_example.vimsource $VIMRUNTIME/mswin.vimbehave mswinset diffexpr=MyDiff()function! MyDiff()  let opt = '-a --binary '  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif  let arg1 = v:fname_in  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif  let arg2 = v:fname_new  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif  let arg3 = v:fname_out  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif  let eq = ''  if $VIMRUNTIME =~ ' '    if &sh =~ '\<cmd'      "let cmd = '""' . $VIMRUNTIME . '\diff"'      "let eq = '"'    else      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'    endif  else    let cmd = $VIMRUNTIME . '\diff'  endif  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eqendfunctionset guioptions=set guifont=Consolas:h11set nuset guitablabel=%tsyntax on                             "Enable syntax hlset noerrorbells                      "No sound on errors.set novisualbellset confirmset autoindent                        "indent automaticallyset cindentset smartindent                       "automatic indent for C fileset tabstop=2                         "tab widthset softtabstop=2set shiftwidth=2set expandtab                         "Expand tab with spaceset smarttabset number                            "Show line numberset history=1000                      "Sets how many lines of history VIM har to rememberset nobackup                          "Turn backup offset nowritebackupset noerrorbellsset noswapfileset backupcopy=yesset ignorecase                        "Ignore case when searchingset smartcaseset incsearchset hlsearch                          "Highlight search thingsset linebreakset ambiwidth=double"set wrap                              "wrap linesset gdefaultset enc=utf-8set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936set langmenu=zh_CN.UTF-8set laststatus=2                      "always show status lineset rulerset cmdheight=1                       "The commandbar is 2 highfiletype on                           "detect file typefiletype plugin on                    "Enable filetype pluginfiletype indent on                    " load special indent format for file typesset viminfo='10,\"100,:20,%,n~/.viminfo   "Restore cursor to file position in previous editing sessionset iskeyword+=_,$,@,%,#,-            "don't return with words containing these charactersset linespace=2set wildmenu                          "Turn on Wild menuset backspace=eol,start,indent        "Set backspaceset whichwrap+=<,>,h,l                "Bbackspace and cursor keys wrap toset autochdir                         "Automatically switch current dir as current file dirset mouse=a                           "Have the mouse enabled all the time:set selection=exclusiveset selectmode=mouse,keyset report=0                          "tell which line is modified by :commandsset shortmess=atI                     "no message with startup GUIset fillchars=vert:\ ,stl:\ ,stlnc:\  "show space at split lineset showmatch                         "show matching bracetsset matchtime=9                       "How many tenths of a second to blinkset nocursorline                      "no highlight current lineif has("gui_running")  ""colorscheme mayansmoke  colorscheme muonlyelseendif"set fileformats=unix,dos,mac          "Favorite filetypesnmap <leader>fd :se ff=dos<cr>nmap <leader>fu :se ff=unix<cr>set autoread                          "Set to auto read when a file is changed from the outsidelet mapleader = ","                   "Set mapleaderlet g:mapleader = ","map <leader>s :source ~/_vimrc<cr>   "Fast reloading of the .vimrcmap <leader>e :e! ~/_vimrc<cr>  "Fast editing of .vimrcautocmd! BufWritePost _vimrc source ~/_vimrc    "When .vimrc is edited, reload it"noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm  "Remove the Windows ^Mset pastetoggle=<F3>    "Paste toggle - when pasting something in, don't indent.function! <SID>BufcloseCloseIt()   let l:currentBufNum = bufnr("%")   let l:alternateBufNum = bufnr("#")   if buflisted(l:alternateBufNum)     buffer #   else     bnext   endif   if bufnr("%") == l:currentBufNum     new   endif   if buflisted(l:currentBufNum)     execute("bdelete! ".l:currentBufNum)   endifendfunction" Don't close window, when deleting a buffercommand! Bclose call <SID>BufcloseCloseIt()function! VisualSearch(direction) range  let l:saved_reg = @"  execute "normal! vgvy"  let l:pattern = escape(@", '\\/.*$^~[]')  let l:pattern = substitute(l:pattern, "\n$", "", "")  if a:direction == 'b'    execute "normal ?" . l:pattern . "^M"  else    execute "normal /" . l:pattern . "^M"  endif  let @/ = l:pattern  let @" = l:saved_reendfunction"Basically you press * or # to search for the current selection !! Really usefulvnoremap <silent> * :call VisualSearch('f')<CR>vnoremap <silent> # :call VisualSearch('b')<CR>set fileencodings=utf-8,gbkautocmd BufEnter * :syntax sync fromstartset lazyredraw                        "Do not redraw, when running macros.. lazyredrawset hidden                            "Change buffer - without savinset magic                             "Set magic onau BufRead,BufNewFile *.adoc set filetype=asciidocau QuickfixCmdPost make,grep,grepadd,vimgrep copenmap <C-j> <ESC>:cn<CR>map <C-k> <ESC>:cp<CR>"Some nice mapping to switch syntax (useful if one mixes different languages in one file)map <leader>1 :set syntax=c<cr>map <leader>2 :set syntax=vhdl<cr>map <leader>3 :set syntax=python<cr>" NerdTreennoremap <F12> :NERDTreeToggle<CR>" yankrinlet g:yankring_history_dir = '~/_vim'let g:yankring_history_file = 'yankring'" Configures for ShowMarks pluginlet showmarks_include =  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""nnoremap <F10> :ShowMarksToggle<CR>"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" STATUS LINE CONFIGURATION EXAMPLE """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" A plain & simple exampleset statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}  " format the status line"" spiiph's"set statusline="set statusline+=%<\                       " cut at start"set statusline+=%2*[%n%H%M%R%W]%*\        " flags and buf no"set statusline+=%-40f\                    " path"set statusline+=%=%1*%y%*%*\              " file type"set statusline+=%10((%l,%c)%)\            " line and column"set statusline+=%P                        " percentage of file "" jamessan's"set statusline=   " clear the statusline for when vimrc is reloaded"set statusline+=%-3.3n\                      " buffer number"set statusline+=%f\                          " file name"set statusline+=%h%m%r%w                     " flags"set statusline+=[%{strlen(&ft)?&ft:'none'},  " filetype"set statusline+=%{strlen(&fenc)?&fenc:&enc}, " encodin"set statusline+=%{&fileformat}]              " file format"set statusline+=%=                           " right align"set statusline+=%{synIDattr(synID(line('.'),col('.'),1),'name')}\  " highlight"set statusline+=%b,0x%-8B\                   " current char"set statusline+=%-14.(%l,%c%V%)\ %<%P        " offset"" godlygeek's"let &statusline='%<%f%{&mod?"[+]":""}%r%{&fenc !~ "^$\\|utf-8" || &bomb ? "[".&fenc.(&bomb?"-bom":"")."]" : ""}%=%15.(%l,%c%V %P%)'"hi User1 gui=NONE guifg=white   guibg=#CCD5E6 cterm=bold ctermfg=white ctermbg=red"hi User8 gui=NONE guifg=#667B99 guibg=#AFBBD2 cterm=NONE ctermfg=black ctermbg=white"hi User2 gui=bold guifg=white   guibg=#333333 cterm=NONE ctermfg=black ctermbg=white"hi User3 gui=bold guifg=white   guibg=#667B99 cterm=NONE ctermfg=black ctermbg=white"set statusline="set statusline+=%3*\ \%n\ %1*\ %8*\ %{winnr()}\ %8*\      "Buffer & Window Number"set statusline+=%2*\ %<%f%m%r%h%w\ %8*\                   "Filename,Path,Modified?Read-only?Help?Preview?"set statusline+=%8*[%{(&ft!=''?&ft:\"unknown\")}\|%{&ff}\|%{''.(&fenc!=''?&fenc:&enc).''}%{(&bomb?\",BOM\":\"\")}]%1*%= "Filetype|Format|Encodin""set statusline+=%8*\ %{&spelllang}\%{(&hlsearch?\"H\":\"\")}\  "Spellanguage & Highlight on?"set statusline+=%8*\ %l/%L(%p%%)-%c             "Rownumber/total (%)"set statusline+=%8*\ [%{strftime(\"%H:%M\")}]\                            "Colnr"set statusline+=%1*\ \ %8*%P                      "Modified? Readonly? Top/bot."==================== Configuration for GITlet g:git_highlight_blame = 1let g:Gitv_OpenHorizontal = 1nmap <leader>gv :Gitv --all<cr>nmap <leader>gV :Gitv! --all<cr>vmap <leader>gV :Gitv! --all<cr>"noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm  "Remove the Windows ^Mset pastetoggle=<F3>    "Paste toggle - when pasting something in, don't indent.map <F2> :%s/\s*$//g<cr>:noh<cr>''    "Remove indenting on empty linesnoremap <F12> :tabnew %<CR>      " New tab with current file" Configuration for vimdiffset diffopt=filler,context:10""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""     plugin setting                                                      """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" miniBufferExplorer"let g:miniBufExplMapWindowNavVim = 1"let g:miniBufExplMapWindowNavArrows = 1"let g:miniBufExplMapCTabSwitchBufs = 1"let g:miniBufExplModSelTarget = 1" Configures for ShowMarks pluginlet showmarks_include =  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"nnoremap <F10> :ShowMarksToggle<CR>"" VimCommander"noremap <silent> <F11> :cal VimCommanderToggle()<CR>" NerdTree"nnoremap <F12> :NERDTreeToggle<CR>" yankrinlet g:yankring_history_dir = '~/.vim'let g:yankring_history_file = 'yankring'" ctags + taglist + cscopeset tags=tags;"let Tlist_Show_One_File = 1let Tlist_Auto_Highlight_Tag = 1let Tlist_Auto_Update = 1let Tlist_File_Fold_Auto_Close = 1let Tlist_Sort_Type = 'name'let Tlist_Exit_OnlyWindow = 1let Tlist_User_Right_Window = 1let Tlist_Show_Menu = 1let Tlist_Show_One_File = 1"let Tlist_Max_Submenu_Items ="let Tlist_Max_Tag_Length ="let Tlist_Process_File_Always = 1set title titlestring=%<%f\ %([%{Tlist_Get_Tagname_By_Line()}]%)let g:netrw_preview = 1nnoremap <F9> :TlistToggle<CR>nnoremap <F5>  <ESC>:exe "ptjump " . expand("<cword>")<ESC>nnoremap <F7>  <ESC>:exe "tjump " . expand("<cword>")<ESC>map <M-j> <ESC>:ptnext<CR>map <M-k> <ESC>:ptprevious<CR>set previewheight=15map <F4> :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>" Narrow Regin Configuration"let g:nrrw_rgn_vert = 1      " open narrow region vertically"let g:nrrw_rgn_wdth = 30     " vertically, widthlet g:nrrw_rgn_protect = 'n' " don't protect the original buffer. Useful for diffvmap <F9> <Leader>nr<CR>"Configuration for Marklet g:mwDefaultHighlightingPalette = 'extended' " extend the color group to 18let g:mwDefaultHighlightingNum = 9  " Reduce color group numberlet g:mwHistAdd = '' " By default the marked word is also added to search (/) and input (@) but I don't want to do so   " these two lines remove the default overridding of * and # operationnmap <Plug>IgnoreMarkSearchNext <Plug>MarkSearchNext nmap <Plug>IgnoreMarkSearchPrev <Plug>MarkSearchPrevnmap <Leader>M <Plug>MarkToggle nmap <Leader>N <Plug>MarkAllClear" snipMate Configurationlet g:snips_author = 'Lin Yang'" BufExplorer Configurationlet g:bufExplorerSplitRight=1        " Split right.let g:bufExplorerShowRelativePath=1  " Show relative paths.let g:bufExplorerShowDirectories=0   " Don't show directories." Session Manlet g:sessionman_save_on_exit=0 nnoremap <F3> :SessionSave<CR>" About tab/space conversion" Ideas come from vim tip wiki: http://vim.wikia.com/wiki/VimTip1592" Example:" Convert all leading spaces to tabs (default range is whole file)  :Space2Tab" Convert lines 11 to 15 only (inclusive)                           :11,15Space2Tab" Convert last visually-selected lines                              :'<,'>Space2Tab" Same, converting leading tabs to spaces                           :'<,'>Tab2Spacecommand! -range=% -nargs=0 Tab2Space execute '<line1>,<line2>s#^\t\+#\=repeat(" ", len(submatch(0))*' . &ts . ')'command! -range=% -nargs=0 Space2Tab execute '<line1>,<line2>s#^\( \{'.&ts.'\}\)\+#\=repeat("\t", len(submatch(0))/' . &ts . ')'"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" STATUS LINE CONFIGURATION EXAMPLE """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""set laststatus=2                      "always show status line" A plain & simple exampleset statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}  " format the status lineset textwidth=0,V
"source $VIMRUNTIME/vimrc_example.vim"source $VIMRUNTIME/mswin.vim"behave mswin"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" General"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""set nocompatible                      "Get out of VI's compatible mode..syntax on                             "Enable syntax hlset noerrorbells                      "No sound on errors.set novisualbellset confirmset autoindent                        "indent automaticallyset cindentset smartindent                       "automatic indent for C fileset tabstop=2                         "tab widthset softtabstop=2set shiftwidth=2set expandtab                         "Expand tab with spaceset smarttabset number                            "Show line numberset history=1000                      "Sets how many lines of history VIM har to rememberset nobackup                          "Turn backup offset nowritebackupset noerrorbellsset noswapfileset backupcopy=yesset ignorecase                        "Ignore case when searchingset smartcaseset incsearchset hlsearch                          "Highlight search thingsset linebreakset textwidth=500set ambiwidth=doubleset wrap                              "wrap lines"set gdefault"set enc=utf-8"set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936"set langmenu=zh_CN.UTF-8"set helplang=cnset statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}  " format the status lineset laststatus=2                      "always show status line"set rulerset cmdheight=1                       "The commandbar is 2 highfiletype on                           "detect file typefiletype plugin on                    "Enable filetype pluginfiletype indent on                    " load special indent format for file typesset viminfo='10,\"100,:20,%,n~/.viminfo   "Restore cursor to file position in previous editing sessionset iskeyword+=_,$,@,%,#,-            "don't return with words containing these charactersset linespace=2set wildmenu                          "Turn on Wild menuset backspace=eol,start,indent        "Set backspaceset whichwrap+=<,>,h,l                "Bbackspace and cursor keys wrap toset autochdir                         "Automatically switch current dir as current file dirset mouse=a                           "Have the mouse enabled all the time:set selection=exclusiveset selectmode=mouse,keyset report=0                          "tell which line is modified by :commandsset shortmess=atI                     "no message with startup GUIset fillchars=vert:\ ,stl:\ ,stlnc:\  "show space at split lineset showmatch                         "show matching bracetsset matchtime=5                       "How many tenths of a second to blinkset nocursorline                      "no highlight current lineset guioptions=set guifont=Consolas:h11if has("gui_running")  set background=dark  colorscheme solarized  "let g:molokai_original=1  "colorscheme molokai  "colorscheme newspaperelse  "set background=light  colorscheme colorzoneendif"set encoding=utf-8"set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936set guitablabel=%tset fileformats=unix,dos,mac          "Favorite filetypesnmap <leader>fd :se ff=dos<cr>nmap <leader>fu :se ff=unix<cr>set autoread                          "Set to auto read when a file is changed from the outsidelet mapleader = ","                   "Set mapleaderlet g:mapleader = ","map <leader>s :source ~/_vimrc<cr>   "Fast reloading of the .vimrcmap <leader>e :e! ~/_vimrc<cr>  "Fast editing of .vimrcautocmd! BufWritePost _vimrc source ~/_vimrc    "When .vimrc is edited, reload it"Some nice mapping to switch syntax (useful if one mixes different languages in one file)map <leader>1 :set syntax=c<cr>map <leader>2 :set syntax=vhdl<cr>map <leader>3 :set syntax=python<cr>au BufRead,BufNewFile *.adoc set filetype=asciidocau QuickfixCmdPost make,grep,grepadd,vimgrep copenmap <C-j> <ESC>:cn<CR>map <C-k> <ESC>:cp<CR>autocmd BufEnter * :syntax sync fromstartset lazyredraw                        "Do not redraw, when running macros.. lazyredrawset hidden                            "Change buffer - without savingset magic                             "Set magic on"map <C-j> <C-W>j                      "Smart way to move btw. windows"map <C-k> <C-W>k"map <C-h> <C-W>h"map <C-l> <C-W>limap <m-$> <esc>$aimap <m-0> <esc>0iimap <D-$> <esc>$aimap <D-0> <esc>0imap <leader>cd :cd %:p:h<cr>          "Switch to current dirmap <leader>q :e ~/buffer<cr>         "Open a dummy buffer for pasteau BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif"map <F9> ggVGg?                      " Buffer - reverse everything ... :)""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""     FILE ENCODING                                                       """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""set fileencodings=utf-8,gbk""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""     Enhancement                                                         """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""function! VisualSearch(direction) range  let l:saved_reg = @"  execute "normal! vgvy"  let l:pattern = escape(@", '\\/.*$^~[]')  let l:pattern = substitute(l:pattern, "\n$", "", "")  if a:direction == 'b'    execute "normal ?" . l:pattern . "^M"  else    execute "normal /" . l:pattern . "^M"  endif  let @/ = l:pattern  let @" = l:saved_regendfunction"Basically you press * or # to search for the current selection !! Really usefulvnoremap <silent> * :call VisualSearch('f')<CR>vnoremap <silent> # :call VisualSearch('b')<CR>function! <SID>BufcloseCloseIt()   let l:currentBufNum = bufnr("%")   let l:alternateBufNum = bufnr("#")   if buflisted(l:alternateBufNum)     buffer #   else     bnext   endif   if bufnr("%") == l:currentBufNum     new   endif   if buflisted(l:currentBufNum)     execute("bdelete! ".l:currentBufNum)   endifendfunction" Don't close window, when deleting a buffercommand! Bclose call <SID>BufcloseCloseIt()noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm  "Remove the Windows ^Mset pastetoggle=<F3>    "Paste toggle - when pasting something in, don't indent.map <F2> :%s/\s*$//g<cr>:noh<cr>''    "Remove indenting on empty lines"noremap <F8> :tabnew %<CR>      " New tab with current file""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""     plugin setting                                                      """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" miniBufferExplorer"let g:miniBufExplMapWindowNavVim = 1"let g:miniBufExplMapWindowNavArrows = 1"let g:miniBufExplMapCTabSwitchBufs = 1"let g:miniBufExplModSelTarget = 1" Configures for ShowMarks pluginlet showmarks_include =  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""nnoremap <F10> :ShowMarksToggle<CR>" VimCommandernoremap <silent> <F11> :cal VimCommanderToggle()<CR>" NerdTreennoremap <F12> :NERDTreeToggle<CR>" yankringlet g:yankring_history_dir = '~/_vim'let g:yankring_history_file = 'yankring'"" ctags + taglist + cscope"set tags=tags;""let Tlist_Show_One_File = 1"let Tlist_File_Fold_Auto_Close = 1"let Tlist_Sort_Type = 'name'"let Tlist_Exit_OnlyWindow = 1"let Tlist_User_Right_Window = 1"let Tlist_Show_Menu = 1"let Tlist_Show_One_File = 1""let Tlist_Max_Submenu_Items =""let Tlist_Max_Tag_Length =""let Tlist_Process_File_Always = 1"nnoremap <F9> :TlistToggle<CR>set diffexpr=MyDiff()function MyDiff()  let opt = '-a --binary '  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif  let arg1 = v:fname_in  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif  let arg2 = v:fname_new  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif  let arg3 = v:fname_out  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif  let eq = ''  if $VIMRUNTIME =~ ' '    if &sh =~ '\<cmd'      let cmd = '""' . $VIMRUNTIME . '\diff"'      let eq = '"'    else      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'    endif  else    let cmd = $VIMRUNTIME . '\diff'  endif  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eqendfunction,V
《残爱，危情总裁的女佣》作者：闪灵【内容介绍】惊恐的尖叫声，彻底打破了黑夜的宁静。她遭人绑架，醒来后却发现不着寸缕的躺在角落里，下身撕心裂肺的痛楚提示着她已遭人强暴。他冰冷的话语在她耳边不断回旋：“我要你做我一生的奴隶。你永远也休想逃出我的掌心。”神秘的古堡之行，让两个人原本恶劣的关系悄悄拉近，她绯红着双颊，轻轻扯下遮羞布，第一次主动上了他的床——却不想缠绵过后，他甩给她一张支票，“从这一刻起，你可以离开了，因为你对我已经没有任何价值了。”三年后随着一心爱她的男人的死，她决然选择报复，一次一次的沉沦，越演越烈……,V
━━━━━━━━━━━━━━━━━━━━━━━━━━━━本书来自【www.nlutxt.com】全集全本完结TXT小说下载网站!本站承诺全部小说完整全本,但转载自互联网,版权归作者所有！但也并不能做到完美如发现缺章节请联系我们将第一时间修正! 更多更新免费电子书请关注:【www.NLUtxt.com】(nLu)txt.com━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ,V
ftp://ftp.vim.org/pub/vim/pc/gvim74.exe,v
陈莹,v
------------------------------------------------,V
b,v
http://sangnabar.org/?fromuid=37632,v
: ,v
passwd,v
Q: what's your grandma's family name?A: yao,V
Name,v
Apple App Store,V
,V
Apple App StoreName: yang80107@gmail.com中文账户：yang80107+apple@gmail.compasswd: iampicoyangQ: what's your grandma's family name?A: yao,V
Taobao,v
--------------------------------------------------- Taobao------------------------------------------------,V
p,v
QQ1: 1743576685:ylylnuzhiduiQQ2: 2585847667:ylylnuzhidui,V
#####################################################################     Person 2                                          ####################################################################Google: fantasy.menta@gmail.com : menta2011lakeTaobap: menta2011: menta2011lake,V
--------------------------------------------------- Taobao------------------------------------------------Taobao: yang80107 : goto11nzl Zhifubao : yang80107@gmail.com: goto11nzl [PayPass:   ylylnuzhidui][我爸爸的名字是：  杨清明[我妈妈的出生地是：  红旗牧场[我妻子的生日是：  19801017,V
BJdata-我的INET账户 INET\yangl ni043089&ni,V
北京社保平台 ：yl570202 Fesco注册密码:570202,V
密码,v
Fesco ：yang80107 :570202,V
注册密码,v
用户名,v
东方万里行: 806940822 :801017,V
:,v
卡号,v
LoginPass,v
 ,v
profile,v
Another ,v
Another profile: menta2011LoginPass: menta2011lake,V
fantasy.menta@gmail.com : menta2011lake,V
Infomation                               ,v
Website  ,v
#####################################################################     Website  Infomation                               ####################################################################,V
Profile,v
Password,v
  ,v
--------------------------------------------------- Google Profile------------------------------------------------yang80107@gmail.com     : goto2011nzlbushbucker@gmail.com    : ylylnuzhiduiyanglinuxer@gmail.com   : ylylnuzhiduipicoyang@gmail.com      : ylylnuzhiduifantasy.menta@gmail.com : menta2011lake,V
:  ,v
file,v
o,v
r,v
P,v
e,v
l,v
i,v
f,v
d,v
w,v
s,v
a,v
yang80107+iapp@gmail.com : ,v
Yahoo mail:Yahoo ID and Email: yang80107@yahoo.comPassword: iampico2008Alternate Email: yang80107@gmail.comQ1: 你奶奶姓啥？ A1：重复四边Q2: 你姥姥姓啥？ A2：重复四遍,V
Smartr: yang80107 : iampicoyang,V
u,v
password,v
m,v
N,v
D,v
I,v
迅雷:     yang80107@gmail.com : iampicoyang豆瓣：    yang80107+douban@gmail.com : iampicoyangVPNPP:    yang80107 : iampicoyangVPN520:   yang80107 : iampicoyang,V
amazon.cn: yang80107@gmail.com : goto11nzl,V
iapps.im: yang80107 : yang80107+iapp@gmail.com : iampicoyang,V
DoNews:   lawrencey : 19800426CSDN:     yang80107 : csdnsuck威锋网：  yang80107 : iampicoyang,V
VPN520: yang80107 : iampicoyang,V
mail:yang80107@gmail.com,V
VPNPP:yang80107 : iampicoyang,V
豆瓣：mail: yang80107+douban@gmail.compasswd: iampicoyang,V
c,v
.,v
g,v
@,v
7,v
0,v
1,v
8,v
n,v
y,v
E,v
 *** joyo-amazon ***,v
ID: ypigbig@hotmail.compass: 8bi,V
Google App EngineApp Idendifier: yang80107.appspot.comApp Title: too-simple,V
迅雷: yang80107@gmail.com : iampicoyang,V
迅雷号码：126532942,V
码,v
密,v
录,v
登,v
箱,v
邮,v
全,v
安,v
